
--[[

the heads-up display (score and miss-count)

]]--

function init(self)
	msg.post( '.', 'acquire_input_focus' )
	self.startup_node = gui.get_node( 'startup' )
	self.gameover_node = gui.get_node( 'gameover' )
	gui.set_enabled( self.gameover_node, false )

	self.home_node = gui.get_node( 'homebtn' )
	self.info_node = gui.get_node( 'infobtn' )

	self.score_node = gui.get_node( 'score' )
	self.score = 0
	self.missed_node = gui.get_node( 'misses' )
	self.missed_pucks = 0

end

function final(self)
end

-- function update(self, dt)
-- end

-- after goal-score, start a new round
function start_new_round( self )
	-- bonus: one missed-puck mark is removed
	if( self.missed_pucks > 0 ) then
		self.missed_pucks = self.missed_pucks - 1
	end
	update_scoreboard( self )
	local orig_pos = {
		vmath.vector3(256,256-65,0.1),
		vmath.vector3(256,256+65,0.1),
		vmath.vector3(160,256,0.1),
	-- 	vmath.vector3(192,256-64,0.1),
	-- 	vmath.vector3(192,256+64,0.1),
	-- 	vmath.vector3( 96,256,0.1),
	} 
	msg.post( '/main', 'new_pucks', {counter=0,orig_pos=orig_pos} )

end

function update_scoreboard( self )
	-- update the display
	local txt = ''
	for i=1,(5-self.missed_pucks) do
		txt = txt .. ';'
	end
	for i=1,self.missed_pucks do
		txt = txt .. 'X'
	end
	gui.set_text( self.missed_node, txt )

	local txt = string.format( '%d', self.score )
	for i=(1+#txt),5 do
		txt = ';' .. txt
	end
	gui.set_text( self.score_node, txt )

end

function on_message(self, message_id, message, sender)
	if( message_id == hash('puck_missed') ) then
		print( 'puck_missed' )
		self.missed_pucks = self.missed_pucks + 1
		if( self.missed_pucks < 6 ) then
			update_scoreboard(self)
			msg.post( '/main', 'new_pucks', { counter=self.missed_pucks, orig_pos=message.orig_pos } )
		else
			-- game over!
			gui.set_enabled( self.gameover_node, true )
			print( 'gameover-enabled is true' )
		end

	elseif( message_id == hash('thru_score') ) then
		print( 'thru-score!' )
		self.score = self.score + 5
		update_scoreboard( self )

	elseif( message_id == hash('goal_score') ) then
		print( 'goal-score' )
		self.score = self.score + 50
		-- show new score (for the goal)
		update_scoreboard( self )
		-- and start a new round in 1 sec
		timer.delay( 1.0, false, start_new_round )

	elseif( message_id == hash('drop_gift') ) then
		drop_new_gift( self )
		
	elseif( message_id == hash('gift_score') ) then
		print( 'gift-score' )
		self.score = self.score + 100
		update_scoreboard( self )

	end
end

function on_input(self, action_id, action)
	if( action_id == hash('touch') ) then
		if( action.pressed ) then
			-- these two are overlapping .. check them separately
			if( gui.pick_node(self.startup_node,action.x,action.y) ) then
				if( gui.is_enabled(self.startup_node) ) then
					print( 'game start' )
					self.score = 0
					self.missed_pucks = 0
					gui.set_enabled( self.startup_node, false )
					start_new_round( self )
				end
			end
			if( gui.pick_node(self.gameover_node,action.x,action.y) ) then
				print( 'gameover-node click' )
				if( gui.is_enabled(self.gameover_node) ) then
					print( 'game re-start' )
					self.score = 0
					self.missed_pucks = 0
					gui.set_enabled( self.gameover_node, false )
					start_new_round( self )
				end
			end
			if( gui.pick_node(self.home_node,action.x,action.y) ) then
				sys.open_url( 'https://blue-turtle.net/' )
			elseif( gui.pick_node(self.info_node,action.x,action.y) ) then
				sys.open_url( 'https://blue-turtle.net/flicker-hockey/' )
			end
		end
	end
end

-- function on_reload(self)
-- end
